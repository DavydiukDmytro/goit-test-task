{"version":3,"file":"static/js/197.c52a508f.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","srore/selectors.js","components/FilterButton/FilterButton.jsx","components/UserCard/UserCard.jsx","components/UserList/UserList.jsx","page/TweetsPage.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\nimport { CARDS_PER_PAGES, TYPE_FILTER } from 'utils/constants';\n\nexport const selectFolloweringList = state => state.users.followingList;\n\nexport const selectUser = state => state.users.users;\n\nexport const selectPage = state => state.users.page;\n\nexport const selectIsLoading = state => state.users.isLoading;\n\nexport const selectFilter = state => state.users.filter;\n\nconst selectorSetFollowStatus = createSelector(\n  [selectUser, selectFolloweringList],\n  (users, followingList) => {\n    return users.map(user => ({\n      ...user,\n      following: followingList.includes(user.id),\n    }));\n  }\n);\n\nconst selectFilterUsers = createSelector(\n  [selectorSetFollowStatus, selectFilter],\n  (users, filter) => {\n    if (filter === TYPE_FILTER.follow) {\n      return users.filter(user => user.following === false);\n    } else if (filter === TYPE_FILTER.followings) {\n      return users.filter(user => user.following === true);\n    }\n    return users;\n  }\n);\n\nexport const isButtonLoadMore = createSelector(\n  [selectFilterUsers, selectPage],\n  (users, page) => {\n    return users.length <= CARDS_PER_PAGES * page ? false : true;\n  }\n);\n\nexport const selectUserPagination = createSelector(\n  [selectFilterUsers, selectPage],\n  (users, page) => {\n    const counterCards = CARDS_PER_PAGES * page;\n    if (users.length > counterCards) {\n      return users.slice(0, counterCards);\n    } else {\n      return users;\n    }\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'srore/selectors';\nimport { changeTheFilter } from 'srore/users/usersSlice';\nimport { TYPE_FILTER } from 'utils/constants';\n\nexport const FilterButton = () => {\n  const dispatch = useDispatch();\n  const active = useSelector(selectFilter);\n  const handleFilterClick = type => {\n    dispatch(changeTheFilter(type));\n  };\n  return (\n    <>\n      {Object.keys(TYPE_FILTER).map(key => (\n        <button\n          key={key}\n          className={key === active ? 'active' : ''}\n          onClick={() => handleFilterClick(key)}\n        >\n          {TYPE_FILTER[key]}\n        </button>\n      ))}\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateUserTunk } from 'srore/users/operatonsUsers';\n\nexport const UserCard = ({ user }) => {\n  const dispatch = useDispatch();\n  const [selectedButtonId, setSelectedButtonId] = useState(null);\n\n  useEffect(() => {\n    setSelectedButtonId(null);\n  }, [user.followers]);\n\n  const handleClick = (id, followers) => {\n    setSelectedButtonId(id);\n    const updateData = { id, followers };\n    dispatch(updateUserTunk(updateData));\n  };\n\n  return (\n    <li>\n      <img src={user.avatar} width=\"50\" height=\"50\" alt=\"User Avatar\" />\n      <p>{user.tweets} tweets</p>\n      <p>{user.followers} followers</p>\n      {user.following ? (\n        <button\n          onClick={() => handleClick(user.id, user.followers - 1)}\n          disabled={selectedButtonId === user.id}\n        >\n          Following\n        </button>\n      ) : (\n        <button\n          onClick={() => handleClick(user.id, user.followers + 1)}\n          disabled={selectedButtonId === user.id}\n        >\n          Follow\n        </button>\n      )}\n    </li>\n  );\n};\n","import { UserCard } from 'components/UserCard';\nimport { useSelector } from 'react-redux';\nimport { selectUserPagination } from 'srore/selectors';\n\nexport const UserList = () => {\n  const users = useSelector(selectUserPagination);\n\n  return (\n    <ul>\n      {users.map(user => (\n        <UserCard key={user.id} user={user} />\n      ))}\n    </ul>\n  );\n};\n","import { FilterButton } from 'components/FilterButton/FilterButton';\nimport { UserList } from 'components/UserList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { isButtonLoadMore, selectIsLoading } from 'srore/selectors';\nimport { getUsersTunk } from 'srore/users/operatonsUsers';\nimport { incrementPageNumber } from 'srore/users/usersSlice';\n\nconst TweetsPage = () => {\n  const dispatch = useDispatch();\n  const isButton = useSelector(isButtonLoadMore);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(getUsersTunk());\n  }, [dispatch]);\n\n  const handleClick = () => {\n    dispatch(incrementPageNumber());\n  };\n  return (\n    <>\n      <Link to={'/'}>Back</Link>\n      <h1>TweetsPage</h1>\n      <FilterButton />\n      {isLoading ? (\n        <p>333</p>\n      ) : (\n        <>\n          <UserList />\n          {isButton && <button onClick={handleClick}>load more</button>}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default TweetsPage;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectPage","state","users","page","selectIsLoading","isLoading","selectFilter","filter","selectorSetFollowStatus","followingList","user","following","includes","id","selectFilterUsers","TYPE_FILTER","isButtonLoadMore","CARDS_PER_PAGES","selectUserPagination","counterCards","slice","FilterButton","dispatch","useDispatch","active","useSelector","keys","className","onClick","type","changeTheFilter","UserCard","useState","selectedButtonId","setSelectedButtonId","useEffect","followers","handleClick","updateData","updateUserTunk","src","avatar","width","height","alt","tweets","disabled","UserList","isButton","getUsersTunk","to","incrementPageNumber"],"sourceRoot":""}